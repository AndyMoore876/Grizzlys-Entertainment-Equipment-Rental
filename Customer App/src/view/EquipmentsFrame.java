/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import client.Client;
import domain.Equipment;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

import static view.App.desktopPane;

/**
 *
 * @author moore
 */
public class EquipmentsFrame extends javax.swing.JInternalFrame {
    private static Client client;
    private ArrayList<Equipment> eList = new ArrayList<>();
    /**
     * Creates new form EquipmentsFrame
     */
    public EquipmentsFrame(Client client) {
        EquipmentsFrame.client = client;
        initComponents();
        addEquipmentsToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        equipmentsFrame = new javax.swing.JInternalFrame();
        rentButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        equipmentsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Equipments");
        setAutoscrolls(true);
        setName("rentalRequestsFrame"); // NOI18N

        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
//        setVisible(true);
        moveToFront();


        equipmentsFrame.setMaximizable(true);
        equipmentsFrame.setResizable(true);
        equipmentsFrame.setTitle("Equipments");

        equipmentsFrame.moveToFront();
        equipmentsFrame.requestFocus();

        javax.swing.GroupLayout equipmentsFrameLayout = new javax.swing.GroupLayout(equipmentsFrame.getContentPane());
        equipmentsFrame.getContentPane().setLayout(equipmentsFrameLayout);
        equipmentsFrameLayout.setHorizontalGroup(
            equipmentsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        equipmentsFrameLayout.setVerticalGroup(
            equipmentsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        rentButton.setText("Rent");
        rentButton.setAutoscrolls(true);
        rentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentButtonActionPerformed(evt);
            }
        });

        equipmentsTable.setAutoCreateRowSorter(true);
        equipmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment Id", "Name", "Type", "Cost Per Day", "Rented", "Date Rented", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equipmentsTable.setColumnSelectionAllowed(true);
        equipmentsTable.setShowHorizontalLines(true);
        equipmentsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(equipmentsTable);
        equipmentsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("This table shows the list of all equipments in the system. ");

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jLabel2.setText("Click the ID for the equipment you want to rent.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rentButton)
                        .addGap(29, 588, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 333, Short.MAX_VALUE)
                    .addComponent(equipmentsFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGap(0, 333, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rentButton)
                .addGap(16, 16, 16))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 193, Short.MAX_VALUE)
                    .addComponent(equipmentsFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGap(0, 193, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentButtonActionPerformed
        int row = equipmentsTable.getSelectedRow();

        desktopPane.add(new CreateRentalRequestFrame(client, (String) model.getValueAt(row,0))).setVisible(true);

    }//GEN-LAST:event_rentButtonActionPerformed

    private void addEquipmentsToTable(){
        client.sendAction("Get Equipment List");
        client.sendObject(client.getLoggedInCustomer().getCustomerId());
        client.receiveResponse();
        this.eList = client.getEquipmentsList();

        System.out.println(eList.toString());

        model = (DefaultTableModel) equipmentsTable.getModel();
        Object rowData [] = new Object[7];
        for(int i=0; i < eList.size(); i++){
            rowData[0] = eList.get(i).getEquipmentId();
            rowData[1] = eList.get(i).getEquipmentName();
            rowData[2] = eList.get(i).getEquipmentType();
            rowData[3] = eList.get(i).getCostPerDay();
            rowData[4] = eList.get(i).getRented();
            rowData[5] = eList.get(i).getDateRented();
            rowData[6] = eList.get(i).getReturnDate();

            model.addRow(rowData);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame equipmentsFrame;
    private javax.swing.JTable equipmentsTable;
    private DefaultTableModel model;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rentButton;
    // End of variables declaration//GEN-END:variables
}
