/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package frame;

import client.Client;
import domain.RentalRequest;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 *
 * @author moore
 */
public class RentalRequestsFrame extends javax.swing.JInternalFrame {

    private static Client client;
    /**
     * Creates new form EquipmentsFrame
     */
    public RentalRequestsFrame(Client client) {
        RentalRequestsFrame.client = client;
        initComponents();
        addRRToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rrFrame = new javax.swing.JInternalFrame();
        denyButton = new javax.swing.JButton();
        approveButton = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        rrTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Rental Requests");
        setName("rentalRequestsFrame"); // NOI18N
//        setVisible(true);
        setResizable(true);
        setClosable(true);
        setMaximizable(true);
        setIconifiable(true);
        moveToFront();


        rrFrame.setMaximizable(true);
        rrFrame.setResizable(true);
        rrFrame.setTitle("Equipments");

        javax.swing.GroupLayout equipmentsFrameLayout = new javax.swing.GroupLayout(rrFrame.getContentPane());
        rrFrame.getContentPane().setLayout(equipmentsFrameLayout);
        equipmentsFrameLayout.setHorizontalGroup(
            equipmentsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        equipmentsFrameLayout.setVerticalGroup(
            equipmentsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        denyButton.setText("Deny");
        denyButton.setAutoscrolls(true);
        denyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyButtonActionPerformed(evt);
            }
        });

        approveButton.setText("Approve");
        approveButton.setAutoscrolls(true);

        approveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = rrTable.getSelectedRow();

                RentalRequest rr = new RentalRequest((String) model.getValueAt(row,0),(String) model.getValueAt(row,1),(String) model.getValueAt(row,2),client.loggedInEmployee.getEmployeeId(), "Approved",(String) model.getValueAt(row,4),(String) model.getValueAt(row,5), (float) model.getValueAt(row,7), (String) model.getValueAt(row, 8));

                client.sendAction("Update Rental Request");
                client.sendObject(rr);
                client.receiveResponse();

                if(client.responseFlag){
                    model.setRowCount(0);
                    addRRToTable();

                    JOptionPane.showMessageDialog(RentalRequestsFrame.this,"Rental Request Updated");
                } else {
                    JOptionPane.showMessageDialog(RentalRequestsFrame.this,"Error Updating Rental Request");
                }
            }
        });

        delete.setText("Delete");
        delete.setAutoscrolls(true);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        rrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Id", "Customer ID", "Equipment ID", "Status", "Start Date", "Return Date", "Employee ID", "Total Cost", "Event"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rrTable.setColumnSelectionAllowed(true);
        rrTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(rrTable);
        rrTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("This table shows the list of all rental requests in the system. ");

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jLabel2.setText("Click the ID for the request you want to Approve, Deny or Delete.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(approveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(denyButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 232, Short.MAX_VALUE)
                    .addComponent(rrFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGap(0, 232, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveButton)
                    .addComponent(denyButton)
                    .addComponent(delete))
                .addContainerGap(9, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 167, Short.MAX_VALUE)
                    .addComponent(rrFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGap(0, 168, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int row = rrTable.getSelectedRow();

        client.sendAction("Delete Rental Request");
        client.sendObject(model.getValueAt(row,0));
        client.receiveResponse();
        if(client.responseFlag){
            model.setRowCount(0);
            addRRToTable();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void denyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyButtonActionPerformed
        int row = rrTable.getSelectedRow();

        RentalRequest rr = new RentalRequest((String) model.getValueAt(row,0),(String) model.getValueAt(row,1),(String) model.getValueAt(row,2), client.loggedInEmployee.getEmployeeId(), "Denied",(String) model.getValueAt(row,4),(String) model.getValueAt(row,5), (float) model.getValueAt(row,7), (String) model.getValueAt(row, 8));

        client.sendAction("Update Rental Request");
        client.sendObject(rr);
        client.receiveResponse();

        if(client.responseFlag){
            model.setRowCount(0);
            addRRToTable();
            JOptionPane.showMessageDialog(RentalRequestsFrame.this,"Rental Request Updated");
        } else {
            JOptionPane.showMessageDialog(RentalRequestsFrame.this,"Error Updating Rental Request");
        }
    }//GEN-LAST:event_denyButtonActionPerformed

    private void addRRToTable(){
        client.sendAction("Get Rental Request List");
        client.receiveResponse();
        this.rrList = client.getRentalRequestsList();

        System.out.println(rrList.toString());

        model = (DefaultTableModel) rrTable.getModel();
        Object rowData [] = new Object[9];

        for(int i=0; i < rrList.size(); i++){

            rowData[0] = rrList.get(i).getRentalRequestId();
            rowData[1] = rrList.get(i).getCustomerId();
            rowData[2] = rrList.get(i).getEquipmentId();
            rowData[3] = rrList.get(i).getStatus();
            rowData[4] = rrList.get(i).getStartDate();
            rowData[5] = rrList.get(i).getReturnDate();
            rowData[6] = rrList.get(i).getEmployeeId();
            rowData[7] = rrList.get(i).getTotalCost();
            rowData[8] = rrList.get(i).getEvent();

            model.addRow(rowData);
        }
    }
    private ArrayList<RentalRequest> rrList = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JButton delete;
    private DefaultTableModel model;
    private javax.swing.JButton denyButton;
    private javax.swing.JInternalFrame rrFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable rrTable;

    // End of variables declaration//GEN-END:variables
}
