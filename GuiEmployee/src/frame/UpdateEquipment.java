/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package frame;

import client.Client;
import domain.Equipment;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.beans.PropertyVetoException;

/**
 *
 * @author moore
 */
public class UpdateEquipment extends javax.swing.JInternalFrame {

    private static Client client;

    private String equipmentId = "";
    /**
     * Creates new form UpdateEquipment
     */
    public UpdateEquipment(Client client, Object equipmentId) {
        UpdateEquipment.client = client;
        this.equipmentId = String.valueOf(equipmentId);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        equipmentTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        idField = new javax.swing.JTextField();
        markReturnedButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
//        setVisible(true);
        setResizable(true);
        setClosable(true);
        setMaximizable(true);
        setIconifiable(true);
        moveToFront();
        try {
            setSelected(true);
        } catch (PropertyVetoException e) {
            throw new RuntimeException(e);
        }
        setTitle("Update Equipment");

        jLabel1.setText("Step 1: Enter the equipment ID and click Search to retrieve it.");

        jLabel2.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jLabel2.setText("Instructions to perform Equipment Update");

        jLabel3.setText("Step 2: Update the relevant attributes for the equipment in the table or use Mark Returned to mark the equipment as returned by the customer.");

        equipmentTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Id", "Name", "Type", "Cost Per Day", "Rented", "Customer ID", "Date Rented", "Return Date", "Event"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, true, true, true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equipmentTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(equipmentTable);

        jLabel4.setText("Equipment ID");
        idField.setText(equipmentId);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        markReturnedButton.setText("Mark Returned");
        markReturnedButton.setEnabled(false);
        markReturnedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        saveButton.setText("Save Changes");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Step 3: Use save changes button to save the changes made.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(markReturnedButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(saveButton))
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(searchButton))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchButton))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(markReturnedButton)
                                        .addComponent(saveButton))
                                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Equipment equipment;
        model = (DefaultTableModel) equipmentTable.getModel();
        model.getValueAt(0,0);
        equipment = new Equipment((String) model.getValueAt(0,0), (String) model.getValueAt(0,1), (String) model.getValueAt(0,2), (String) model.getValueAt(0,5), (String) model.getValueAt(0,8), (Boolean) model.getValueAt(0,4), (String) model.getValueAt(0,6), (String) model.getValueAt(0,7), Float.parseFloat((String) model.getValueAt(0,3)));

        client.sendAction("Update Equipment");
        client.sendObject(equipment);
        client.receiveResponse();

        if (client.responseFlag == true){
            JOptionPane.showMessageDialog(UpdateEquipment.this,"Equipment Updated Succesfully", "Update Equipment", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(UpdateEquipment.this,"Failed to update equipment", "Update Equipment", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {
        equipmentId = idField.getText();
        model = (DefaultTableModel) equipmentTable.getModel();
        model.setRowCount(0);
        
        client.sendAction("Get Equipment");
        client.sendObject(equipmentId);
        client.receiveResponse();
        Equipment equipment = client.getEquipment();
        if(equipment == null){
            JOptionPane.showMessageDialog(UpdateEquipment.this, "Equipment not found", "Equipment Search", JOptionPane.INFORMATION_MESSAGE);
        } else {
            addEquipmentsToTable(equipment);
            saveButton.setEnabled(true);
            if (equipment.getRented()) {
                markReturnedButton.setEnabled(true);
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        Equipment equipment = new Equipment((String) model.getValueAt(0,0), (String) model.getValueAt(0,1), (String) model.getValueAt(0,2), (String) model.getValueAt(0,5), (String) model.getValueAt(0,8), (Boolean) model.getValueAt(0,4), (String) model.getValueAt(0,6), (String) model.getValueAt(0,7), Float.parseFloat((String)model.getValueAt(0,3)));

        equipment.setRented(false);
        equipment.setCustomerId(null);
        equipment.setDateRented(null);
        equipment.setReturnDate(null);
        equipment.setEvent(null);
        client.sendAction("Update Equipment");
        client.sendObject(equipment);
        client.receiveResponse();

        if (client.responseFlag == true){
            JOptionPane.showMessageDialog(UpdateEquipment.this,"Equipment Marked Returned Succesfully.", "Update Equipment", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(UpdateEquipment.this,"Failed to mark equipment as returned.", "Update Equipment", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void addEquipmentsToTable(Equipment eq){

        model = (DefaultTableModel) equipmentTable.getModel();
        Object rowData [] = new Object[9];
        
            rowData[0] = eq.getEquipmentId();
            rowData[1] = eq.getEquipmentName();
            rowData[2] = eq.getEquipmentType();
            rowData[3] = eq.getCostPerDay();
            rowData[4] = eq.getRented();
            rowData[5] = eq.getCustomerId();
            rowData[6] = eq.getDateRented();
            rowData[7] = eq.getReturnDate();
            rowData[8] = eq.getEvent();

            model.addRow(rowData);
        
    }

    // Variables declaration - do not modify
    private javax.swing.JButton markReturnedButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable equipmentTable;
    private javax.swing.JTextField idField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private DefaultTableModel model;
    // End of variables declaration
}
